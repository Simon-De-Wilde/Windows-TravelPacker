<Page xmlns:my="using:Windows.UI.Xaml.Controls.Maps"  x:Class="TravelPacker.View.Travels.TravelListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:TravelPacker.View.Travels"
      xmlns:model="using:TravelPacker.Model"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:devicefam="using:TravelPacker.Util"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <Style x:Key="ListViewItemContainerStyle1"
               TargetType="ListViewItem">
            <Setter Property="FontFamily"
                    Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize"
                    Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background"
                    Value="{ThemeResource ListViewItemBackground}" />
            <Setter Property="Foreground"
                    Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation"
                    Value="Local" />
            <Setter Property="IsHoldingEnabled"
                    Value="True" />
            <Setter Property="Padding"
                    Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="MinWidth"
                    Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight"
                    Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop"
                    Value="False" />
            <Setter Property="UseSystemFocusVisuals"
                    Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin"
                    Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root"
                                               CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                               ContentMargin="{TemplateBinding Padding}"
                                               CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckMode="{ThemeResource ListViewItemCheckMode}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackground}"
                                               DragForeground="{ThemeResource ListViewItemDragForeground}"
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                               FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                               FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Control.IsTemplateFocusTarget="True"
                                               PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                               PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                               PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                               RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                               RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                               SelectedForeground="Transparent"
                                               SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                               SelectedBackground="Transparent"
                                               SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                                               SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)"
                                                    Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush"
                                                    Value="Transparent" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)"
                                                    Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush"
                                                    Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)"
                                                    Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush"
                                                    Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)"
                                                    Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush"
                                                    Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)"
                                                    Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush"
                                                    Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness"
                                                    Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <ScrollViewer>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="mobileView">
                    <VisualState.StateTriggers>
                        <devicefam:DeviceFamilyStateTrigger TargetDeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="txt_header.Orientation"
                                Value="vertical" />

                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="tabletView">
                    <VisualState.StateTriggers>
                        <!--<devicefam:DeviceFamilyStateTrigger TargetDeviceFamily="Desktop" />-->
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="txt_header.Orientation"
                                Value="vertical" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="desktopView">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="750" />
                        <!--<devicefam:DeviceFamilyStateTrigger TargetDeviceFamily="Desktop" />-->
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="txt_header.Orientation"
                                Value="horizontal" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <StackPanel Orientation="Vertical">
            <!--header-->
            <StackPanel Orientation="Horizontal" x:Name="txt_header" HorizontalAlignment="Left">
                <TextBlock Margin="10 0 40 20"
                           TextWrapping="Wrap"
                           Style="{ThemeResource HeaderTextBlockStyle}"
                           Text="{x:Bind ViewModel.Travel.Name}" />
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="btn_updateTravel"
                        Margin="0,-15,0,0"
                        Click="btn_updateTravel_Click"
                        HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center">
                            <SymbolIcon Symbol="Edit"
                                    Margin="5"
                                    VerticalAlignment="Center" />
                            <TextBlock Text="Update"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btn_route"  Margin="20,-15,0,0" Click="btn_route_Click">
                        <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center">
                            <SymbolIcon Symbol="MapPin"
                                    Margin="5"
                                    VerticalAlignment="Center" />
                            <TextBlock Text="See route"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </StackPanel>
            <Grid BorderThickness="0 0 0 1"
                  BorderBrush="black"
                  Padding="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="Packinglist"
                           HorizontalAlignment="Center"
                           Grid.Column="0"
                           Padding="25 0 25 0"
                           Style="{ThemeResource TitleTextBlockStyle}"/>
                <StackPanel Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Text="Tasks"
                           Padding="25 0 25 0"
                           Style="{ThemeResource TitleTextBlockStyle}"/>
                    <Button x:Name="btnAddTask" Click="btn_AddTask_Click">
                        <SymbolIcon Symbol="Add" />
                    </Button>
                </StackPanel>

                <TextBlock Text="Route"
                           HorizontalAlignment="Center"
                           Grid.Column="2"
                           Padding="25 0 25 0"
                           Style="{ThemeResource TitleTextBlockStyle}"/>
            </Grid>
            <Grid Padding="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="500" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- List of items to pack -->
                <ListView Grid.Column="0" Grid.Row="0" Padding="10"  BorderBrush="Black" BorderThickness="0 0 1 0"  x:Name="listView" ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}"
                          ItemsSource="{x:Bind ViewModel.Travel.Categories}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Category">
                            <controls:Expander HorizontalContentAlignment="Left"
                                               Header="{x:Bind OverviewName}"
                                               Width="400">

                                <ListView HorizontalAlignment="Left"
                                          ItemsSource="{x:Bind Items}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="model:Item">
                                            <StackPanel Orientation="Vertical">
                                                <CheckBox Content="{x:Bind Title}"
                                                          Checked="onItemChecked" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </controls:Expander>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Viewbox Grid.Column="0" Grid.Row="1" Margin="0 30 0 0" MaxHeight="60" MaxWidth="60">
                    <SymbolIcon Symbol="World"/>
                </Viewbox>
                <!-- List of tasks -->
                <ListView Grid.Column="1" Grid.Row="0" Padding="10" Margin="50 0 0 0" BorderBrush="Black" BorderThickness="0 0 1 0"  x:Name="listView2" ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}" ItemsSource="{x:Bind ViewModel.Travel.Tasks}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:TravelTask">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Content="{x:Bind Title}" Checked="onItemChecked"/>
                                    <Button HorizontalAlignment="Right" Margin="200 0 0 0" Click="btn_DeleteTask_Click">
                                        <SymbolIcon Symbol="Delete" />
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Viewbox Grid.Column="1" Grid.Row="1" Margin="0 30 0 0" MaxHeight="60" MaxWidth="60">
                    <SymbolIcon Symbol="Bullets"/>
                </Viewbox>
                <!-- Map + address -->
                <Viewbox Grid.Column="2" Grid.Row="1" Margin="0 30 0 0" MaxHeight="60" MaxWidth="60">
                    <SymbolIcon Symbol="Calendar"/>
                </Viewbox>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Page>
